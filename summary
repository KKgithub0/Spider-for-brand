1. 爬虫框架 Python selenium 用来模拟浏览器分析动态网页
2. selenium中使用find_element_by_xpath来定位数据，用模拟鼠标动作来操作点击和移动用来获取动态数据。
3. 初期在爬取一个网页时如京东淘宝等效果比较好，用的浏览器核是chrome，可以边看边调试，能准确完成任务。
4. 后面在给定批量数据在百度首页爬取相关推荐时遇到了诸多问题：
    1. 时间控制，有的网页一直处于加载状态导致程序一直等待加载完成，这个情况通过加隐性和显性时间控制得到解决。
    2. 由于数据量比较大，考虑到多线程进行爬取。开始时考虑了selenium自己带的多线程操作，包括grid和testNG，发现这个模式是跨机器跨浏览器的操作，并不适用于单机器，此处也有疑问，即单机器的多线程到底能否增加爬取速度，理论上可以。之后做法是用Python多线程调用多个浏览器爬取，其中遇到奇怪的问题，比如用chrome核做爬取时，总是会在网页加载停止后不进行之后的操作，导致程序停住了！原因未知。而且chrome会调用出浏览器界面，疑似是浏览器过多导致系统内存不足，有待考察。目前可行的做法是将chrome改为phantomjs，不再出现程序停止的问题，爬取效率提高很多，而且不再需要可视化界面，可行。
5. 现在的程序是在本机Mac上运行，要移植到服务器上，考虑因素服务器网络比较稳定，服务器可以在后台进行操作，不影响本机工作，移植过程中遇到问题：
    1. 环境配置问题 phantomjs、chrome调用不了，网上查证是缺少了libfontconfig包，centos系统需要yum安装，然后用yum命令时和环境的Python出现了版本不匹配的问题。验证发现并非此问题。
    2. selenium需要更高版本的动态库和编译库，目前的centos4.3并不支持，而且处理很麻烦，考虑centos6.3，测试成功。
    3. 关于安装中所需的各种包，统计如下：
        1. selenium 安装方法：https://pypi.python.org/pypi/selenium    python setup.py install
        2. phantomjs安装方法：http://phantomjs.org/download.html

